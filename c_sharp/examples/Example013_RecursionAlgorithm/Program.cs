// string[,] table = new string[2,5];
// table[1,2] = "слово";

// for (int rows = 0; rows < 2; rows++)
// {
//     for (int columns = 0; columns < 5; columns++)
//     {
//         Console.WriteLine($"{table[rows, columns]}--");
//     }
// }

// void GetArray (int rowNum, int columnNum){
//     int[,]matrix = new int[3, 4];
//     for (int i = 0; i < matrix.GetLength(0); i++){
//     for (int j = 0; j < matrix.GetLength(1); j++){
//         matrix[i, j] = new Random().Next(0, 10);
//         Console.Write($"{matrix[i, j]} ");
//         }
//     Console.WriteLine();
//     }
// }

// GetArray(4, 4);

// Console.Clear();
// int[,] pic = new int[,]
// {
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// };

// void PrintArray (int[,] image){
//     for (int i = 0; i < image.GetLength(0); i++){
//     for (int j = 0; j < image.GetLength(1); j++){
//         if(image[i, j] == 0) Console.Write("  ");
//         else Console.Write("+ ");
//         }
//     Console.WriteLine();
//     }
// }

// void FillImage (int row, int col){
//     if (pic[row, col] == 0){
//         pic[row, col] = 1;
//         FillImage (row-1, col);
//         FillImage (row, col-1);
//         FillImage (row+1, col);
//         FillImage (row, col+1);
//     }
// }

// PrintArray(pic);
// FillImage(13, 13);
// PrintArray(pic);

// double Factorial (int n){
//     if(n == 1) return 1;
//     else return n * Factorial(n-1);
// }

// for (int i = 1; i < 40; i++){
//     Console.WriteLine($"{i}! = {Factorial(i)}");
// }

double Fibonacci(int n, int i){
    if (i >= n+2) return 0;
    double result = Fibonacci(n, i+2) - Fibonacci(n, i+1)+2;
    return result;                                  

}
Console.WriteLine($"{Fibonacci(5, 0)}");
// for (int i = 1; i < 11; i++)
// {
//     Console.WriteLine($"f({i}) = {Fibonacci(i)}");
// }

// F(-1) = 1, F(0) = 0   F(1) = F(-1) + F(0)   F(-1) = F(1) - F(0)
// F(-2) = F(0) - F(-1) = -1
// F(-3) = F(-1) - F(-2) = 2
// F(-4) = F(-2) - F(-3) = -3
// F(-5) = F(-3) - F(-4) = 5
// F(-6) = F(-4) - F(-5) = -8
// F(-7) = F(-5) - F(-6) = 13
// F(-8) = F(-6) - F(-7) = -21
// F(-9) = F(-7) - F(-8) = 34
// F(-10) = F(-8) - F(-9) = -55

//F(n) = F(n+2) - F(n+1)